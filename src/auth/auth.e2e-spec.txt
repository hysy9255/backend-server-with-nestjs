import request from 'supertest';
import { INestApplication, ValidationPipe } from '@nestjs/common';
import { Test } from '@nestjs/testing';
import { AppModule } from 'src/app.module';
// import { AppModule } from '../src/app.module';

describe('Order Flow for Owner (e2e)', () => {
  let app: INestApplication;
  let accessToken: string;

  beforeAll(async () => {
    const moduleRef = await Test.createTestingModule({
      imports: [AppModule],
    }).compile();

    app = moduleRef.createNestApplication();
    app.useGlobalPipes(
      new ValidationPipe({ whitelist: true, forbidNonWhitelisted: true }),
    );
    await app.init();
  });

  //   it('should sign up a new owner', async () => {
  //     const res = await request(app.getHttpServer())
  //       .post('/auth/signup')
  //       .send({
  //         email: 'owner@example.com',
  //         password: 'password123',
  //         role: 'Owner',
  //       })
  //       .expect(201);

  //     expect(res.body).toHaveProperty('id');
  //     expect(res.body.email).toBe('owner@example.com');
  //   });

  //   it('should log in the owner and return access token', async () => {
  //     const res = await request(app.getHttpServer())
  //       .post('/auth/login')
  //       .send({
  //         email: 'owner@example.com',
  //         password: 'password123',
  //       })
  //       .expect(200);

  //     expect(res.body).toHaveProperty('accessToken');
  //     accessToken = res.body.accessToken;
  //   });

  //   it('should return order summaries for the owner', async () => {
  //     const res = await request(app.getHttpServer())
  //       .get('/orders/owner/summary')
  //       .set('Authorization', `Bearer ${accessToken}`)
  //       .expect(200);

  //     expect(Array.isArray(res.body)).toBe(true);
  //     // expect(res.body[0]).toHaveProperty('status'); ← 실제 필드 이름에 맞게 수정
  //   });

  //   afterAll(async () => {
  //     await app.close();
  //   });
});
